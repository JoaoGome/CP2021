Resolução da Ficha 1: https://docs.google.com/document/d/18a8H-vkJZeaNLXhCre4hUO8bwmHWyxfK5ojiFd2AEd4/edit#heading=h.hx2vhkixpy76

Exercício 1

    Alinea a)

        Usar Regra 72: Def-comp: (f.g) x = f(g x)

        f x = 2*x e g x = x + 1, logo f(g x) = 2 * (x + 1) <=> f(g x) = 2x + 2

        f x = succ e g x = 2x, logo f(g x) = succ (2x) <=> f(g x) = 2x + 1

    Alinea b)

        Mostrar que (f.g).h = f.(g.h)

        -> pela regra 71 temos que:

            ((f.g).h) x = (f.(g.h)) x

        -> pela regra 72 temos que:

            (f.g)(h x) = f((g.h) x)

        -> pela regra 72 temos que:

            f(g(h x)) = f(g(h x))

        -> pela propriedade reflexiva de igualdade, temos que a expressão anterior é True.

    Alinea c) -> TPC

Exercício 2

    Alinea a)

        Mostrar que (f x g)(x,y) = (fx,gy)

        -> pela lei 10, temos que:

            < f.pi1, g.pi2> (x,y) = (fx,gy)

        -> pela lei 76, temos que:

            ((f.pi1)(x,y), (g.pi2)(x,y)) = (fx,gy)

        -> pela lei 72, temos que:

            (f(pi1(x,y)),g(pi2(x,y))) = (fx,gy)

        -> pela lei 79, temos que:

            (fx,gy) = (fx,gy) -> True

Exercício 3

    Temos que:

        pi2: A x B -> B
        pi1: C x D -> C 

        O split de pi1 e pi2 origina a unificação A x B = C x D ou seja A = C e B = D -> os tipos de entrada de pi1 e pi2 têm de ser iguais.

        logo temos que  pi2: A x B -> B e pi1: A x B -> A 

        Tipo de primeiro split <pi2,pi1>: A x B -> B x A

        Sabemos que o segundo split terá tipo um tipo genérico <pi2,pi1>: C x D -> D x C, mas also sabemos que o output do primeiro será o input do segundo
        Logo, B x A = C x D <=> B = C e A = D 

        Logo, o tipo do segundo split será: B x A -> A x B 

        Temos então que: 1º ? = A x B; 2º ? = B x A; 3º? = A x B